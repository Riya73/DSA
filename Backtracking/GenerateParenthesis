class Solution{
public List<String> generateParenthesis(int n){
        List<String> result = new ArrayList<>();
        StringBuilder output = new StringBuilder();
        generateParenthesis(result, n,0,0,output);
        return result;
    }

    private void generateParenthesis(List<String> result, int n, int ob, int cb, StringBuilder output){
        //termination case
        if(output.length() == n*2){
            result.add(output.toString());
            return;
        }

        //can i place opening bracket
        if(ob<n){
            output.append("("); //place ob
            generateParenthesis(result, n, ob+1, cb, output);
            // stack fall/backtrack
            output.deleteCharAt(output.length()-1);
        }

        //can i place closing bracket
         if(cb<ob){
            output.append(")"); //place cb
            generateParenthesis(result, n, ob, cb+1, output);
            //stack fall
            output.deleteCharAt(output.length()-1);
        }
    }
}
