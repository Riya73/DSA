class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode(int val) {
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

public class BinaryTree {

    // Print nodes at distance K from the root
    public void printNodesAtDistanceK(TreeNode root, int k) {
        if (root == null || k < 0)
            return;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        int currentLevel = 0;
        while (!queue.isEmpty()) {
            int nodesAtCurrentLevel = queue.size();

            if (currentLevel == k) {
                System.out.print("Nodes at distance " + k + ": ");
                for (TreeNode node : queue) {
                    System.out.print(node.val + " ");
                }
                System.out.println();
                return;
            }

            for (int i = 0; i < nodesAtCurrentLevel; i++) {
                TreeNode current = queue.poll();
                if (current.left != null)
                    queue.offer(current.left);
                if (current.right != null)
                    queue.offer(current.right);
            }

            currentLevel++;
        }
    }
}
