class TreeNode {
    int val;
    TreeNode left, right;

    TreeNode(int data) {
        this.val = data;
        this.left = this.right = null;
    }
}

public class TreeTraversal {

    public static void printBoundary(TreeNode root) {
        if (root == null)
            return;

        System.out.print(root.val + " ");
        printLeftBoundary(root.left);
        printLeaves(root.left);
        printLeaves(root.right);
        printRightBoundary(root.right);
    }

    public static void printLeftBoundary(TreeNode node) {
        if (node == null)
            return;

        if (node.left != null) {
            System.out.print(node.val + " ");
            printLeftBoundary(node.left);
        } else if (node.right != null) {
            System.out.print(node.val + " ");
            printLeftBoundary(node.right);
        }
    }

    public static void printRightBoundary(TreeNode node) {
        if (node == null)
            return;

        if (node.right != null) {
            printRightBoundary(node.right);
            System.out.print(node.val + " ");
        } else if (node.left != null) {
            printRightBoundary(node.left);
            System.out.print(node.val + " ");
        }
    }

    public static void printLeaves(TreeNode node) {
        if (node == null)
            return;

        printLeaves(node.left);

        if (node.left == null && node.right == null)
            System.out.print(node.val + " ");

        printLeaves(node.right);
    }
}
